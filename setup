#!/bin/sh

install_zsh () { #{{{
    install zsh/.zshrc .zshrc
    install zsh/.zshenv .zshenv
} #}}}

install_tcsh () { #{{{
    install .tcshrc
} #}}}

install_bash () { #{{{
    install .bashrc
    install .bash_profile
} #}}}

install_screen () { #{{{
    install .screenrc
} #}}}

install_tmux () { #{{{
    install .tmux.conf
} #}}}

install_git () { #{{{
    printf '  Acquiring information for ".gitconfig".\n'
    printf '  Input your user name: '
    read username
    printf '  Input your user email: '
    read useremail
    echo '[user]' > $source_dir/.gitconfig.user
    echo "    name = $username" >> $source_dir/.gitconfig.user
    echo "    email = $useremail" >> $source_dir/.gitconfig.user
    echo '' >> $source_dir/.gitconfig.user

    cat $source_dir/.gitconfig.user > $source_dir/.gitconfig.local
    cat $source_dir/.gitconfig >> $source_dir/.gitconfig.local
    install .gitconfig.local .gitconfig
} #}}}

install_vim () { #{{{
    install .vim
    cd $HOME/.vim
    if [ ! -d bundle ]; then
        mkdir bundle
    fi

    cd bundle
    printf '  Installing vundle plugin ... '
    git clone https://github.com/VundleVim/Vundle.vim >/dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo 'Done'
    else
        echo 'Already installed'
        printf '  Updating vundle ... '
        cd Vundle.vim && git pull >/dev/null 2>&1
        echo 'Done'
    fi
    printf '  Installing plugins ... '
    vim +PluginInstall +qall
    echo 'Done'
} #}}}

install_all () { #{{{
    install_zsh
    install_tcsh
    install_bash
    install_screen
    install_tmux
    install_git
    install_vim
} #}}}


if [ $# -eq 0 ]; then
    echo 'Available targets:'
    echo '    all'
    echo '    zsh'
    echo '    tcsh'
    echo '    bash'
    echo '    screen'
    echo '    tmux'
    echo '    git'
    echo '    vim'
    exit
fi

pushd $(dirname $0) > /dev/null
source_dir=$(pwd -P)
popd > /dev/null

source $source_dir/.setup-tools

BACKUP_TOP_FOLDER=".old_rcfiles"
BACKUP_DIR_NAME="`date +%Y%m%d_%H%M%S`"
BACKUP_FILE_PATH="$HOME/$BACKUP_TOP_FOLDER/$BACKUP_DIR_NAME"

while [ $# -gt 0 ]; do
    case "$1" in
        all | zsh | tcsh | bash | screen | tmux | git | vim)
            message_install_start $1
            install_${1}
            message_install_complete $1
            echo ''
            ;;
        *)
            message_unknown_target $1
            ;;
    esac
    shift
done

if [ -d $BACKUP_FILE_PATH ]; then
    printf "Old files is in $BACKUP_FILE_PATH\n"
fi
